plugins {
  id 'scala'
  id 'com.google.cloud.tools.jib'
}

repositories {
  mavenCentral()
}

def scalaVersion = System.getenv("SMOKE_TEST_SCALA_VERSION") ?: "3"
def http4sVersion = "0.23.30"

dependencies {
  if (scalaVersion == "3") {
    implementation "org.scala-lang:scala3-library_3:3.7.2"
  } else {
    implementation "org.scala-lang:scala-library:2.13.16"
  }

  implementation("io.opentelemetry:opentelemetry-api:${versions.opentelemetrySdk}")
  implementation("io.opentelemetry.instrumentation:opentelemetry-instrumentation-annotations:${versions.opentelemetryJavaagent}")

  implementation("org.http4s:http4s-ember-server_$scalaVersion:$http4sVersion")
  implementation("org.http4s:http4s-dsl_$scalaVersion:$http4sVersion")
}

def targetJDK = System.getenv("SMOKE_TEST_JAVA_VERSION") ?: "11"
def tag = System.getenv("SMOKE_TEST_DOCKER_TAG") ?: "latest"

java {
  // this is needed to avoid jib failing with
  // "Your project is using Java 17 but the base image is for Java 8"
  // (it seems the jib plugins does not understand toolchains yet)
  sourceCompatibility = JavaVersion.VERSION_1_8
  targetCompatibility = JavaVersion.VERSION_1_8
}

jib {
  from.image = "eclipse-temurin:$targetJDK"
  to.image = "smoke-test-http4s:jdk$targetJDK-scala$scalaVersion-$tag"
  container.mainClass = "example.Server"
}